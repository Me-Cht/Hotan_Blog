{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.h = h;\nexports.patchChildren = patchChildren;\nfunction isUndef(v) {\n  return v === null || v === undefined;\n}\nfunction isDef(v) {\n  return v !== null && v !== undefined;\n}\nfunction sameVval(oldVval, vval) {\n  return vval.tag === oldVval.tag && vval.key === oldVval.key;\n}\nfunction createVm(vval) {\n  var Vm = vval.tag;\n  vval.vm = new Vm({\n    data: vval.args\n  });\n}\nfunction updateVval(vval) {\n  var keys = Object.keys(vval.args);\n  for (var i = 0; i < keys.length; i++) {\n    keys.forEach(function (k) {\n      vval.vm[k] = vval.args[k];\n    });\n  }\n}\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) map[key] = i;\n  }\n  return map;\n}\nfunction updateChildren(oldCh, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVval = oldCh[0];\n  var oldEndVval = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVval = newCh[0];\n  var newEndVval = newCh[newEndIdx];\n  var oldKeyToIdx, idxInOld, elmToMove;\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (isUndef(oldStartVval)) {\n      oldStartVval = oldCh[++oldStartIdx];\n    } else if (isUndef(oldEndVval)) {\n      oldEndVval = oldCh[--oldEndIdx];\n    } else if (sameVval(oldStartVval, newStartVval)) {\n      patchVval(oldStartVval, newStartVval);\n      oldStartVval = oldCh[++oldStartIdx];\n      newStartVval = newCh[++newStartIdx];\n    } else if (sameVval(oldEndVval, newEndVval)) {\n      patchVval(oldEndVval, newEndVval);\n      oldEndVval = oldCh[--oldEndIdx];\n      newEndVval = newCh[--newEndIdx];\n    } else if (sameVval(oldStartVval, newEndVval)) {\n      patchVval(oldStartVval, newEndVval);\n      oldStartVval = oldCh[++oldStartIdx];\n      newEndVval = newCh[--newEndIdx];\n    } else if (sameVval(oldEndVval, newStartVval)) {\n      patchVval(oldEndVval, newStartVval);\n      oldEndVval = oldCh[--oldEndIdx];\n      newStartVval = newCh[++newStartIdx];\n    } else {\n      if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      idxInOld = isDef(newStartVval.key) ? oldKeyToIdx[newStartVval.key] : null;\n      if (isUndef(idxInOld)) {\n        createVm(newStartVval);\n        newStartVval = newCh[++newStartIdx];\n      } else {\n        elmToMove = oldCh[idxInOld];\n        if (sameVval(elmToMove, newStartVval)) {\n          patchVval(elmToMove, newStartVval);\n          oldCh[idxInOld] = undefined;\n          newStartVval = newCh[++newStartIdx];\n        } else {\n          createVm(newStartVval);\n          newStartVval = newCh[++newStartIdx];\n        }\n      }\n    }\n  }\n  if (oldStartIdx > oldEndIdx) {\n    addVvals(newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVvals(oldCh, oldStartIdx, oldEndIdx);\n  }\n}\nfunction addVvals(vvals, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    createVm(vvals[startIdx]);\n  }\n}\nfunction removeVvals(vvals, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    var ch = vvals[startIdx];\n    if (isDef(ch)) {\n      ch.vm.$destroy();\n      ch.vm = null;\n    }\n  }\n}\nfunction patchVval(oldVval, vval) {\n  if (oldVval === vval) {\n    return;\n  }\n  vval.vm = oldVval.vm;\n  updateVval(vval);\n}\nfunction patchChildren(oldCh, ch) {\n  if (isDef(oldCh) && isDef(ch)) {\n    if (oldCh !== ch) updateChildren(oldCh, ch);\n  } else if (isDef(ch)) {\n    addVvals(ch, 0, ch.length - 1);\n  } else if (isDef(oldCh)) {\n    removeVvals(oldCh, 0, oldCh.length - 1);\n  }\n}\nfunction h(tag, key, args) {\n  return {\n    tag: tag,\n    key: key,\n    args: args\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","h","patchChildren","isUndef","v","undefined","isDef","sameVval","oldVval","vval","tag","key","createVm","Vm","vm","data","args","updateVval","keys","i","length","forEach","k","createKeyToOldIdx","children","beginIdx","endIdx","map","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","oldEndIdx","oldStartVval","oldEndVval","newEndIdx","newStartVval","newEndVval","oldKeyToIdx","idxInOld","elmToMove","patchVval","addVvals","removeVvals","vvals","startIdx","ch","$destroy"],"sources":["/Users/chenhetian/04Front_end/FruitVue0629/node_modules/vuelidate/lib/vval.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.h = h;\nexports.patchChildren = patchChildren;\n\nfunction isUndef(v) {\n  return v === null || v === undefined;\n}\n\nfunction isDef(v) {\n  return v !== null && v !== undefined;\n}\n\nfunction sameVval(oldVval, vval) {\n  return vval.tag === oldVval.tag && vval.key === oldVval.key;\n}\n\nfunction createVm(vval) {\n  var Vm = vval.tag;\n  vval.vm = new Vm({\n    data: vval.args\n  });\n}\n\nfunction updateVval(vval) {\n  var keys = Object.keys(vval.args);\n\n  for (var i = 0; i < keys.length; i++) {\n    keys.forEach(function (k) {\n      vval.vm[k] = vval.args[k];\n    });\n  }\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) map[key] = i;\n  }\n\n  return map;\n}\n\nfunction updateChildren(oldCh, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVval = oldCh[0];\n  var oldEndVval = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVval = newCh[0];\n  var newEndVval = newCh[newEndIdx];\n  var oldKeyToIdx, idxInOld, elmToMove;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (isUndef(oldStartVval)) {\n      oldStartVval = oldCh[++oldStartIdx];\n    } else if (isUndef(oldEndVval)) {\n      oldEndVval = oldCh[--oldEndIdx];\n    } else if (sameVval(oldStartVval, newStartVval)) {\n      patchVval(oldStartVval, newStartVval);\n      oldStartVval = oldCh[++oldStartIdx];\n      newStartVval = newCh[++newStartIdx];\n    } else if (sameVval(oldEndVval, newEndVval)) {\n      patchVval(oldEndVval, newEndVval);\n      oldEndVval = oldCh[--oldEndIdx];\n      newEndVval = newCh[--newEndIdx];\n    } else if (sameVval(oldStartVval, newEndVval)) {\n      patchVval(oldStartVval, newEndVval);\n      oldStartVval = oldCh[++oldStartIdx];\n      newEndVval = newCh[--newEndIdx];\n    } else if (sameVval(oldEndVval, newStartVval)) {\n      patchVval(oldEndVval, newStartVval);\n      oldEndVval = oldCh[--oldEndIdx];\n      newStartVval = newCh[++newStartIdx];\n    } else {\n      if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      idxInOld = isDef(newStartVval.key) ? oldKeyToIdx[newStartVval.key] : null;\n\n      if (isUndef(idxInOld)) {\n        createVm(newStartVval);\n        newStartVval = newCh[++newStartIdx];\n      } else {\n        elmToMove = oldCh[idxInOld];\n\n        if (sameVval(elmToMove, newStartVval)) {\n          patchVval(elmToMove, newStartVval);\n          oldCh[idxInOld] = undefined;\n          newStartVval = newCh[++newStartIdx];\n        } else {\n          createVm(newStartVval);\n          newStartVval = newCh[++newStartIdx];\n        }\n      }\n    }\n  }\n\n  if (oldStartIdx > oldEndIdx) {\n    addVvals(newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVvals(oldCh, oldStartIdx, oldEndIdx);\n  }\n}\n\nfunction addVvals(vvals, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    createVm(vvals[startIdx]);\n  }\n}\n\nfunction removeVvals(vvals, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    var ch = vvals[startIdx];\n\n    if (isDef(ch)) {\n      ch.vm.$destroy();\n      ch.vm = null;\n    }\n  }\n}\n\nfunction patchVval(oldVval, vval) {\n  if (oldVval === vval) {\n    return;\n  }\n\n  vval.vm = oldVval.vm;\n  updateVval(vval);\n}\n\nfunction patchChildren(oldCh, ch) {\n  if (isDef(oldCh) && isDef(ch)) {\n    if (oldCh !== ch) updateChildren(oldCh, ch);\n  } else if (isDef(ch)) {\n    addVvals(ch, 0, ch.length - 1);\n  } else if (isDef(oldCh)) {\n    removeVvals(oldCh, 0, oldCh.length - 1);\n  }\n}\n\nfunction h(tag, key, args) {\n  return {\n    tag: tag,\n    key: key,\n    args: args\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}