{"ast":null,"code":"// Code block (4 spaces padded)\n\n'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = function code(state, startLine, endLine /*, silent*/) {\n  var nextLine,\n    last,\n    token,\n    emptyLines = 0;\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n  last = nextLine = startLine + 1;\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      emptyLines++;\n\n      // workaround for lists: 2 blank lines should terminate indented\n      // code block, but not fenced code block\n      if (emptyLines >= 2 && state.parentType === 'list') {\n        break;\n      }\n      nextLine++;\n      continue;\n    }\n    emptyLines = 0;\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map = [startLine, state.line];\n  return true;\n};","map":{"version":3,"names":["require","module","exports","code","state","startLine","endLine","nextLine","last","token","emptyLines","sCount","blkIndent","isEmpty","parentType","line","push","content","getLines","map"],"sources":["/Users/chenhetian/04Front_end/FruitVue0629/hotan-blog/node_modules/markdown-it/lib/rules_block/code.js"],"sourcesContent":["// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token, emptyLines = 0;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      emptyLines++;\n\n      // workaround for lists: 2 blank lines should terminate indented\n      // code block, but not fenced code block\n      if (emptyLines >= 2 && state.parentType === 'list') {\n        break;\n      }\n\n      nextLine++;\n      continue;\n    }\n\n    emptyLines = 0;\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n"],"mappings":"AAAA;;AAEA,YAAY;;AAACA,OAAA;AAGbC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAIA,CAACC,KAAK,EAAEC,SAAS,EAAEC,OAAO,eAAc;EACpE,IAAIC,QAAQ;IAAEC,IAAI;IAAEC,KAAK;IAAEC,UAAU,GAAG,CAAC;EAEzC,IAAIN,KAAK,CAACO,MAAM,CAACN,SAAS,CAAC,GAAGD,KAAK,CAACQ,SAAS,GAAG,CAAC,EAAE;IAAE,OAAO,KAAK;EAAE;EAEnEJ,IAAI,GAAGD,QAAQ,GAAGF,SAAS,GAAG,CAAC;EAE/B,OAAOE,QAAQ,GAAGD,OAAO,EAAE;IACzB,IAAIF,KAAK,CAACS,OAAO,CAACN,QAAQ,CAAC,EAAE;MAC3BG,UAAU,EAAE;;MAEZ;MACA;MACA,IAAIA,UAAU,IAAI,CAAC,IAAIN,KAAK,CAACU,UAAU,KAAK,MAAM,EAAE;QAClD;MACF;MAEAP,QAAQ,EAAE;MACV;IACF;IAEAG,UAAU,GAAG,CAAC;IAEd,IAAIN,KAAK,CAACO,MAAM,CAACJ,QAAQ,CAAC,GAAGH,KAAK,CAACQ,SAAS,IAAI,CAAC,EAAE;MACjDL,QAAQ,EAAE;MACVC,IAAI,GAAGD,QAAQ;MACf;IACF;IACA;EACF;EAEAH,KAAK,CAACW,IAAI,GAAGP,IAAI;EAEjBC,KAAK,GAAWL,KAAK,CAACY,IAAI,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC;EACnDP,KAAK,CAACQ,OAAO,GAAGb,KAAK,CAACc,QAAQ,CAACb,SAAS,EAAEG,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACQ,SAAS,EAAE,IAAI,CAAC;EAC1EH,KAAK,CAACU,GAAG,GAAO,CAAEd,SAAS,EAAED,KAAK,CAACW,IAAI,CAAE;EAEzC,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}