{"ast":null,"code":"/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nvar ParseError = require(\"./src/ParseError\");\nvar Settings = require(\"./src/Settings\");\nvar buildTree = require(\"./src/buildTree\");\nvar parseTree = require(\"./src/parseTree\");\nvar utils = require(\"./src/utils\");\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function (expression, baseNode, options) {\n  utils.clearNode(baseNode);\n  var settings = new Settings(options);\n  var tree = parseTree(expression, settings);\n  var node = buildTree(tree, expression, settings).toNode();\n  baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n  if (document.compatMode !== \"CSS1Compat\") {\n    typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n    render = function () {\n      throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n    };\n  }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function (expression, options) {\n  var settings = new Settings(options);\n  var tree = parseTree(expression, settings);\n  return buildTree(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function (expression, options) {\n  var settings = new Settings(options);\n  return parseTree(expression, settings);\n};\nmodule.exports = {\n  render: render,\n  renderToString: renderToString,\n  /**\n   * NOTE: This method is not currently recommended for public use.\n   * The internal tree representation is unstable and is very likely\n   * to change. Use at your own risk.\n   */\n  __parse: generateParseTree,\n  ParseError: ParseError\n};","map":{"version":3,"names":["ParseError","require","Settings","buildTree","parseTree","utils","render","expression","baseNode","options","clearNode","settings","tree","node","toNode","appendChild","document","compatMode","console","warn","renderToString","toMarkup","generateParseTree","module","exports","__parse"],"sources":["/Users/chenhetian/04Front_end/FruitVue0629/hotan-blog/node_modules/katex/katex.js"],"sourcesContent":["/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\nvar ParseError = require(\"./src/ParseError\");\nvar Settings = require(\"./src/Settings\");\n\nvar buildTree = require(\"./src/buildTree\");\nvar parseTree = require(\"./src/parseTree\");\nvar utils = require(\"./src/utils\");\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar render = function(expression, baseNode, options) {\n    utils.clearNode(baseNode);\n\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    var node = buildTree(tree, expression, settings).toNode();\n\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\n            \"Warning: KaTeX doesn't work in quirks mode. Make sure your \" +\n                \"website has a suitable doctype.\");\n\n        render = function() {\n            throw new ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function(expression, options) {\n    var settings = new Settings(options);\n\n    var tree = parseTree(expression, settings);\n    return buildTree(tree, expression, settings).toMarkup();\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar generateParseTree = function(expression, options) {\n    var settings = new Settings(options);\n    return parseTree(expression, settings);\n};\n\nmodule.exports = {\n    render: render,\n    renderToString: renderToString,\n    /**\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: generateParseTree,\n    ParseError: ParseError,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC5C,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAExC,IAAIE,SAAS,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAC1C,IAAIG,SAAS,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAC1C,IAAII,KAAK,GAAGJ,OAAO,CAAC,aAAa,CAAC;;AAElC;AACA;AACA;AACA;AACA,IAAIK,MAAM,GAAG,SAAAA,CAASC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,EAAE;EACjDJ,KAAK,CAACK,SAAS,CAACF,QAAQ,CAAC;EAEzB,IAAIG,QAAQ,GAAG,IAAIT,QAAQ,CAACO,OAAO,CAAC;EAEpC,IAAIG,IAAI,GAAGR,SAAS,CAACG,UAAU,EAAEI,QAAQ,CAAC;EAC1C,IAAIE,IAAI,GAAGV,SAAS,CAACS,IAAI,EAAEL,UAAU,EAAEI,QAAQ,CAAC,CAACG,MAAM,EAAE;EAEzDN,QAAQ,CAACO,WAAW,CAACF,IAAI,CAAC;AAC9B,CAAC;;AAED;AACA;AACA,IAAI,OAAOG,QAAQ,KAAK,WAAW,EAAE;EACjC,IAAIA,QAAQ,CAACC,UAAU,KAAK,YAAY,EAAE;IACtC,OAAOC,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,IAAI,CAC1C,6DAA6D,GACzD,iCAAiC,CAAC;IAE1Cb,MAAM,GAAG,SAAAA,CAAA,EAAW;MAChB,MAAM,IAAIN,UAAU,CAAC,oCAAoC,CAAC;IAC9D,CAAC;EACL;AACJ;;AAEA;AACA;AACA;AACA,IAAIoB,cAAc,GAAG,SAAAA,CAASb,UAAU,EAAEE,OAAO,EAAE;EAC/C,IAAIE,QAAQ,GAAG,IAAIT,QAAQ,CAACO,OAAO,CAAC;EAEpC,IAAIG,IAAI,GAAGR,SAAS,CAACG,UAAU,EAAEI,QAAQ,CAAC;EAC1C,OAAOR,SAAS,CAACS,IAAI,EAAEL,UAAU,EAAEI,QAAQ,CAAC,CAACU,QAAQ,EAAE;AAC3D,CAAC;;AAED;AACA;AACA;AACA,IAAIC,iBAAiB,GAAG,SAAAA,CAASf,UAAU,EAAEE,OAAO,EAAE;EAClD,IAAIE,QAAQ,GAAG,IAAIT,QAAQ,CAACO,OAAO,CAAC;EACpC,OAAOL,SAAS,CAACG,UAAU,EAAEI,QAAQ,CAAC;AAC1C,CAAC;AAEDY,MAAM,CAACC,OAAO,GAAG;EACblB,MAAM,EAAEA,MAAM;EACdc,cAAc,EAAEA,cAAc;EAC9B;AACJ;AACA;AACA;AACA;EACIK,OAAO,EAAEH,iBAAiB;EAC1BtB,UAAU,EAAEA;AAChB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}