{"ast":null,"code":"/* eslint no-unused-vars:0 */\n\nvar Style = require(\"./Style\");\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmmi10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the symbol fonts. In TeX, there are actually three sets of\n// dimensions, one for each of textstyle, scriptstyle, and scriptscriptstyle,\n// but we only use the textstyle ones, and scale certain dimensions accordingly.\n// See the TeXbook, page 441.\nvar sigma1 = 0.025;\nvar sigma2 = 0;\nvar sigma3 = 0;\nvar sigma4 = 0;\nvar sigma5 = 0.431;\nvar sigma6 = 1;\nvar sigma7 = 0;\nvar sigma8 = 0.677;\nvar sigma9 = 0.394;\nvar sigma10 = 0.444;\nvar sigma11 = 0.686;\nvar sigma12 = 0.345;\nvar sigma13 = 0.413;\nvar sigma14 = 0.363;\nvar sigma15 = 0.289;\nvar sigma16 = 0.150;\nvar sigma17 = 0.247;\nvar sigma18 = 0.386;\nvar sigma19 = 0.050;\nvar sigma20 = 2.390;\nvar sigma21 = 1.01;\nvar sigma21Script = 0.81;\nvar sigma21ScriptScript = 0.71;\nvar sigma22 = 0.250;\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n  xHeight: sigma5,\n  quad: sigma6,\n  num1: sigma8,\n  num2: sigma9,\n  num3: sigma10,\n  denom1: sigma11,\n  denom2: sigma12,\n  sup1: sigma13,\n  sup2: sigma14,\n  sup3: sigma15,\n  sub1: sigma16,\n  sub2: sigma17,\n  supDrop: sigma18,\n  subDrop: sigma19,\n  axisHeight: sigma22,\n  defaultRuleThickness: xi8,\n  bigOpSpacing1: xi9,\n  bigOpSpacing2: xi10,\n  bigOpSpacing3: xi11,\n  bigOpSpacing4: xi12,\n  bigOpSpacing5: xi13,\n  ptPerEm: ptPerEm,\n  emPerEx: sigma5 / sigma6,\n  doubleRuleSep: doubleRuleSep,\n  // TODO(alpert): Missing parallel structure here. We should probably add\n  // style-specific metrics for all of these.\n  delim1: sigma20,\n  getDelim2: function (style) {\n    if (style.size === Style.TEXT.size) {\n      return sigma21;\n    } else if (style.size === Style.SCRIPT.size) {\n      return sigma21Script;\n    } else if (style.size === Style.SCRIPTSCRIPT.size) {\n      return sigma21ScriptScript;\n    }\n    throw new Error(\"Unexpected style size: \" + style.size);\n  }\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function (character, style) {\n  var metrics = metricMap[style][character.charCodeAt(0)];\n  if (metrics) {\n    return {\n      depth: metrics[0],\n      height: metrics[1],\n      italic: metrics[2],\n      skew: metrics[3],\n      width: metrics[4]\n    };\n  }\n};\nmodule.exports = {\n  metrics: metrics,\n  getCharacterMetrics: getCharacterMetrics\n};","map":{"version":3,"names":["Style","require","sigma1","sigma2","sigma3","sigma4","sigma5","sigma6","sigma7","sigma8","sigma9","sigma10","sigma11","sigma12","sigma13","sigma14","sigma15","sigma16","sigma17","sigma18","sigma19","sigma20","sigma21","sigma21Script","sigma21ScriptScript","sigma22","xi1","xi2","xi3","xi4","xi5","xi6","xi7","xi8","xi9","xi10","xi11","xi12","xi13","ptPerEm","doubleRuleSep","metrics","xHeight","quad","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","axisHeight","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","emPerEx","delim1","getDelim2","style","size","TEXT","SCRIPT","SCRIPTSCRIPT","Error","metricMap","getCharacterMetrics","character","charCodeAt","depth","height","italic","skew","width","module","exports"],"sources":["/Users/chenhetian/04Front_end/FruitVue0629/hotan-blog/node_modules/katex/src/fontMetrics.js"],"sourcesContent":["/* eslint no-unused-vars:0 */\n\nvar Style = require(\"./Style\");\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmmi10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the symbol fonts. In TeX, there are actually three sets of\n// dimensions, one for each of textstyle, scriptstyle, and scriptscriptstyle,\n// but we only use the textstyle ones, and scale certain dimensions accordingly.\n// See the TeXbook, page 441.\nvar sigma1 = 0.025;\nvar sigma2 = 0;\nvar sigma3 = 0;\nvar sigma4 = 0;\nvar sigma5 = 0.431;\nvar sigma6 = 1;\nvar sigma7 = 0;\nvar sigma8 = 0.677;\nvar sigma9 = 0.394;\nvar sigma10 = 0.444;\nvar sigma11 = 0.686;\nvar sigma12 = 0.345;\nvar sigma13 = 0.413;\nvar sigma14 = 0.363;\nvar sigma15 = 0.289;\nvar sigma16 = 0.150;\nvar sigma17 = 0.247;\nvar sigma18 = 0.386;\nvar sigma19 = 0.050;\nvar sigma20 = 2.390;\nvar sigma21 = 1.01;\nvar sigma21Script = 0.81;\nvar sigma21ScriptScript = 0.71;\nvar sigma22 = 0.250;\n\n// These font metrics are extracted from TeX by using\n// \\font\\a=cmex10\n// \\showthe\\fontdimenX\\a\n// where X is the corresponding variable number. These correspond to the font\n// parameters of the extension fonts (family 3). See the TeXbook, page 441.\nvar xi1 = 0;\nvar xi2 = 0;\nvar xi3 = 0;\nvar xi4 = 0;\nvar xi5 = 0.431;\nvar xi6 = 1;\nvar xi7 = 0;\nvar xi8 = 0.04;\nvar xi9 = 0.111;\nvar xi10 = 0.166;\nvar xi11 = 0.2;\nvar xi12 = 0.6;\nvar xi13 = 0.1;\n\n// This value determines how large a pt is, for metrics which are defined in\n// terms of pts.\n// This value is also used in katex.less; if you change it make sure the values\n// match.\nvar ptPerEm = 10.0;\n\n// The space between adjacent `|` columns in an array definition. From\n// `\\showthe\\doublerulesep` in LaTeX.\nvar doubleRuleSep = 2.0 / ptPerEm;\n\n/**\n * This is just a mapping from common names to real metrics\n */\nvar metrics = {\n    xHeight: sigma5,\n    quad: sigma6,\n    num1: sigma8,\n    num2: sigma9,\n    num3: sigma10,\n    denom1: sigma11,\n    denom2: sigma12,\n    sup1: sigma13,\n    sup2: sigma14,\n    sup3: sigma15,\n    sub1: sigma16,\n    sub2: sigma17,\n    supDrop: sigma18,\n    subDrop: sigma19,\n    axisHeight: sigma22,\n    defaultRuleThickness: xi8,\n    bigOpSpacing1: xi9,\n    bigOpSpacing2: xi10,\n    bigOpSpacing3: xi11,\n    bigOpSpacing4: xi12,\n    bigOpSpacing5: xi13,\n    ptPerEm: ptPerEm,\n    emPerEx: sigma5 / sigma6,\n    doubleRuleSep: doubleRuleSep,\n\n    // TODO(alpert): Missing parallel structure here. We should probably add\n    // style-specific metrics for all of these.\n    delim1: sigma20,\n    getDelim2: function(style) {\n        if (style.size === Style.TEXT.size) {\n            return sigma21;\n        } else if (style.size === Style.SCRIPT.size) {\n            return sigma21Script;\n        } else if (style.size === Style.SCRIPTSCRIPT.size) {\n            return sigma21ScriptScript;\n        }\n        throw new Error(\"Unexpected style size: \" + style.size);\n    },\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\nvar metricMap = require(\"./fontMetricsData\");\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a style.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nvar getCharacterMetrics = function(character, style) {\n    var metrics = metricMap[style][character.charCodeAt(0)];\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4],\n        };\n    }\n};\n\nmodule.exports = {\n    metrics: metrics,\n    getCharacterMetrics: getCharacterMetrics,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}