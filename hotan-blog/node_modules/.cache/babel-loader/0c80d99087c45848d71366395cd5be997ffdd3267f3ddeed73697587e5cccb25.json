{"ast":null,"code":"// Proceess '\\n'\n\n'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nmodule.exports = function newline(state, silent) {\n  var pmax,\n    max,\n    pos = state.pos;\n  if (state.src.charCodeAt(pos) !== 0x0A /* \\n */) {\n    return false;\n  }\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) {\n    pos++;\n  }\n  state.pos = pos;\n  return true;\n};","map":{"version":3,"names":["require","module","exports","newline","state","silent","pmax","max","pos","src","charCodeAt","pending","length","posMax","replace","push","slice"],"sources":["/Users/chenhetian/04Front_end/FruitVue0629/fruitshop/node_modules/markdown-it/lib/rules_inline/newline.js"],"sourcesContent":["// Proceess '\\n'\n\n'use strict';\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n"],"mappings":"AAAA;;AAEA,YAAY;;AAACA,OAAA;AAEbC,MAAM,CAACC,OAAO,GAAG,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC/C,IAAIC,IAAI;IAAEC,GAAG;IAAEC,GAAG,GAAGJ,KAAK,CAACI,GAAG;EAE9B,IAAIJ,KAAK,CAACK,GAAG,CAACC,UAAU,CAACF,GAAG,CAAC,KAAK,IAAI,WAAU;IAAE,OAAO,KAAK;EAAE;EAEhEF,IAAI,GAAGF,KAAK,CAACO,OAAO,CAACC,MAAM,GAAG,CAAC;EAC/BL,GAAG,GAAGH,KAAK,CAACS,MAAM;;EAElB;EACA;EACA;EACA;EACA,IAAI,CAACR,MAAM,EAAE;IACX,IAAIC,IAAI,IAAI,CAAC,IAAIF,KAAK,CAACO,OAAO,CAACD,UAAU,CAACJ,IAAI,CAAC,KAAK,IAAI,EAAE;MACxD,IAAIA,IAAI,IAAI,CAAC,IAAIF,KAAK,CAACO,OAAO,CAACD,UAAU,CAACJ,IAAI,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;QAC5DF,KAAK,CAACO,OAAO,GAAGP,KAAK,CAACO,OAAO,CAACG,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QAChDV,KAAK,CAACW,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;MAClC,CAAC,MAAM;QACLX,KAAK,CAACO,OAAO,GAAGP,KAAK,CAACO,OAAO,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1CZ,KAAK,CAACW,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;MAClC;IAEF,CAAC,MAAM;MACLX,KAAK,CAACW,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;IAClC;EACF;EAEAP,GAAG,EAAE;;EAEL;EACA,OAAOA,GAAG,GAAGD,GAAG,IAAIH,KAAK,CAACK,GAAG,CAACC,UAAU,CAACF,GAAG,CAAC,KAAK,IAAI,EAAE;IAAEA,GAAG,EAAE;EAAE;EAEjEJ,KAAK,CAACI,GAAG,GAAGA,GAAG;EACf,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}